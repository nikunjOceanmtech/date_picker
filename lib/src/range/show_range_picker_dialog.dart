import 'package:flutter/material.dart';

import '../shared/picker_type.dart';
import 'range_picker.dart';

Future<DateTimeRange?> showRangePickerDialog({
  required BuildContext context,
  required DateTime maxDate,
  required DateTime minDate,
  DateTime? initialDate,
  DateTime? currentDate,
  DateTimeRange? selectedRange,
  EdgeInsets contentPadding = const EdgeInsets.all(16),
  EdgeInsets padding = const EdgeInsets.all(36),
  PickerType initialPickerType = PickerType.days,
  bool barrierDismissible = true,
  Color? barrierColor = Colors.black54,
  String? barrierLabel,
  bool useSafeArea = true,
  bool useRootNavigator = true,
  RouteSettings? routeSettings,
  Offset? anchorPoint,
  TextStyle? daysOfTheWeekTextStyle,
  TextStyle? enabledCellsTextStyle,
  BoxDecoration enabledCellsDecoration = const BoxDecoration(),
  TextStyle? disbaledCellsTextStyle,
  BoxDecoration disbaledCellsDecoration = const BoxDecoration(),
  TextStyle? currentDateTextStyle,
  BoxDecoration? currentDateDecoration,
  TextStyle? selectedCellsTextStyle,
  BoxDecoration? selectedCellsDecoration,
  TextStyle? singelSelectedCellTextStyle,
  BoxDecoration? singelSelectedCellDecoration,
  double? slidersSize,
  Color? slidersColor,
  TextStyle? leadingDateTextStyle,
  Color? highlightColor,
  Color? splashColor,
  double? splashRadius,
  Color? backgroundColor,
  TextStyle? applyButtonTextStyle,
  BoxDecoration? applyButtonBoxDecoration,
  TextStyle? cancelButtonTextStyle,
  BoxDecoration? cancelButtonBoxDecoration,
  double? twoButtonCenterSpace,
  String? calcelButtonText,
  String? okButtonText,
  Color? applyButtonColor,
  Color? cancelButtonColor,
  Color? themeColor,
  Color? defaultColor,
  Color? cancelTextColor,
  Color? applyTextColor,
}) async {
  return showDialog(
    context: context,
    barrierColor: barrierColor,
    anchorPoint: anchorPoint,
    barrierDismissible: barrierDismissible,
    barrierLabel: barrierLabel,
    routeSettings: routeSettings,
    useRootNavigator: useRootNavigator,
    useSafeArea: useSafeArea,
    builder: (context) {
      return Padding(
        padding: padding,
        child: Dialog(
          backgroundColor: backgroundColor ?? Colors.white,
          surfaceTintColor: backgroundColor ?? Colors.white,
          insetPadding: EdgeInsets.zero,
          child: RangeDatePicker(
            applyButtonTextStyle: applyButtonTextStyle,
            applyButtonBoxDecoration: applyButtonBoxDecoration,
            cancelButtonTextStyle: cancelButtonTextStyle,
            cancelButtonBoxDecoration: cancelButtonBoxDecoration,
            twoButtonCenterSpace: twoButtonCenterSpace,
            calcelButtonText: calcelButtonText,
            okButtonText: okButtonText,
            applyButtonColor: applyButtonColor,
            cancelButtonColor: cancelButtonColor,
            currentDate: currentDate,
            maxDate: maxDate,
            minDate: minDate,
            initialDate: initialDate,
            selectedRange: selectedRange,
            onRangeSelected: (value) => value,
            initialPickerType: initialPickerType,
            padding: contentPadding,
            currentDateDecoration: currentDateDecoration,
            currentDateTextStyle: currentDateTextStyle,
            disbaledCellsDecoration: disbaledCellsDecoration,
            disbaledCellsTextStyle: disbaledCellsTextStyle,
            enabledCellsDecoration: enabledCellsDecoration,
            enabledCellsTextStyle: enabledCellsTextStyle,
            selectedCellsDecoration: selectedCellsDecoration,
            selectedCellsTextStyle: selectedCellsTextStyle,
            daysOfTheWeekTextStyle: daysOfTheWeekTextStyle,
            singelSelectedCellTextStyle: singelSelectedCellTextStyle,
            singelSelectedCellDecoration: singelSelectedCellDecoration,
            leadingDateTextStyle: leadingDateTextStyle,
            slidersColor: slidersColor,
            slidersSize: slidersSize,
            highlightColor: highlightColor,
            splashColor: splashColor,
            splashRadius: splashRadius,
            themeColor: themeColor,
            defaultColor: defaultColor,
            cancelTextColor: cancelTextColor,
            applyTextColor: applyTextColor,
          ),
        ),
      );
    },
  );
}
